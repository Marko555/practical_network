import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.*;
import java.sql.Time;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class ViewComputersGUI extends JFrame {


    private ComputerLaptop cl;
    private UserLaptop ul;
    
    private JPanel contentPane;
    private JPanel tablePane;
    private JPanel infoPanel;

    private JScrollPane scrollPane;
    private DefaultTableModel modelTable;
    Class[] colTypes;
    TableModel data;

    private JTable jTable;
    private JLabel lUnit;
    private JComboBox unitsBox;
    
    private Server ser;

    public ViewComputersGUI(Server s) {

        this.ser = s;
    	scrollPane = new JScrollPane();
        modelTable = new DefaultTableModel() {
            Class[] types = new Class [] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jTable = new JTable(modelTable);

        try {
            FileInputStream saveFile = new FileInputStream("units.dat");
            ObjectInputStream save = new ObjectInputStream(saveFile);
            this.unitList = (UnitList) save.readObject();
            save.close();

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "First you have to create New Student Class", "WRONG !!!", JOptionPane.ERROR_MESSAGE);

        } catch (IOException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }

        contentPane = (JPanel) this.getContentPane();
        contentPane.setPreferredSize(new Dimension(400, 100));
        tablePane = new JPanel();
        this.setTitle("View Computers");

        infoPanel = new JPanel();
        infoPanel.setLayout(new FlowLayout());
        lUnit = new JLabel("Unit:");
        infoPanel.add(lUnit);
        unitsBox = new JComboBox();
        try {
            for (Unit u : unitList.getUnits()) {
                unitsBox.addItem(u.getUnitName());
            }
        } catch (NullPointerException ex) {

        }
        unitsBox.setSelectedIndex(-1);
        unitsBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                click_actionPerformed(e);
            }
        });
        
        contentPane.add(infoPanel, BorderLayout.NORTH);
    }

    private void click_actionPerformed(ActionEvent e) {
        this.setSize(600, 400);

        int rows = modelTable.getRowCount();
        for(int i = rows - 1; i >=0; i--)
        {
            modelTable.removeRow(i);
        }

        try {
            FileInputStream saveFile = new FileInputStream("saveFile_" + this.unitsBox.getSelectedItem().toString() + ".dat");
            ObjectInputStream save = new ObjectInputStream(saveFile);
            this.studentList = (StudentList) save.readObject();
            save.close();

            modelTable.setColumnCount(3);
            modelTable.setColumnIdentifiers(new Object[]{"IP Address", "Host Name", "Username"});
            for (Student s : studentList.getArrayOfStudents()) {
                modelTable.addRow(new Object[]{s.getId(), s.getName(), s.getTel(), s.getEmail(), s.checkAbsenceLimit(studentList.getUnit().getUnitName()), studentList.getUnit().getAbsencesPermitted()});
            }
            scrollPane.setViewportView(jTable);
            contentPane.add(scrollPane, BorderLayout.CENTER);

        } catch (ClassNotFoundException e1) {
            e1.printStackTrace();
        } catch (FileNotFoundException e1) {
            int res = JOptionPane.showConfirmDialog(null, "There is not a Student List for that Unit!\nDo you want to create one now?","Warning", JOptionPane.YES_NO_OPTION);
            if (res == JOptionPane.YES_OPTION){
                dispose();
                JFrame unitGui = new UnitGUI();
                unitGui.pack();
                unitGui.setLocationRelativeTo(null);
                unitGui.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                unitGui.setVisible(true);
            }
        } catch (IOException e1) {
            e1.printStackTrace();
        }
    }
}
